(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{490:function(e,t,a){"use strict";a.r(t);var n=a(29),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"debugging-op-tee-ta"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugging-op-tee-ta"}},[e._v("#")]),e._v(" Debugging OP-TEE TA")]),e._v(" "),a("p",[e._v("When developing applications, it is inevitable that there will be a need for\ndebugging. This tutorial introduces how to configure the debug environment in\nOP-TEE enabled QEMU environment. You may also check\n"),a("a",{attrs:{href:"https://optee.readthedocs.io/en/latest/building/devices/qemu.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("OP-TEE documentation")]),e._v("\nfor more information about running QEMU for Arm v8.")]),e._v(" "),a("p",[e._v("To debug TEE core running QEMU with GDB, it is necessary to disable TEE ASLR with\n"),a("code",[e._v("CFG_CORE_ASLR ?= n")]),e._v(" in "),a("code",[e._v("OP-TEE/optee_os/mk/config.mk")]),e._v(". Note that you need to\nrecompile QEMU with "),a("code",[e._v("make run")]),e._v(" again. You can also choose to add the compilation\ninformation directly at compile time.")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ make run CFG_CORE_ASLR=n\n")])])]),a("p",[e._v("Since we will debug the TA remotely with a "),a("code",[e._v("gdb")]),e._v(" server, please also add the\n"),a("code",[e._v("GDBSERVER=y")]),e._v(" flag when compiling QEMU.")]),e._v(" "),a("p",[e._v("To debug a TA, you need to first start a gdb on the host machine. Then run\n"),a("code",[e._v("target remote :1234")]),e._v(" to connect to the remote QEMU GDB server.")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ ./path/to/qemu-v8-project/out-br/host/bin/aarch64-buildroot-linux-gnu-gdb\n(gdb) target remote :1234\nRemote debugging using :1234\nwarning: No executable has been specified and target does not support\ndetermining executable automatically.  Try using the "file" command.\n0xffffb30b00ea12b4 in ?? ()\n')])])]),a("p",[e._v("Next, in the GDB console, load the symbol table of the TEE core library.")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(gdb) symbol-file /path/to/qemu-v8-project/optee_os/out/arm/core/tee.elf\n")])])]),a("p",[e._v("Taking "),a("code",[e._v("hello_world-rs")]),e._v(" as an example, you can get the start address of the text\nsection from the log in the secure world console, which is 0x40014000.")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("D/LD:  ldelf:168 ELF (133af0ca-bdab-11eb-9130-43bf7873bf67) at 0x40014000\n")])])]),a("p",[e._v("Then, you can load symbols from TA file (in debug build) to the address.")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(gdb) add-symbol-file /path/to/examples/hello_world-rs/ta/target/aarch64-unknown-optee-trustzone/debug/ta 0x40014000\n")])])]),a("p",[e._v("Now, you can add breakpoints according to your own needs in the corresponding\nfunctions or addresses.")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(gdb) b invoke_command\nBreakpoint 2 at 0xe11bb08: invoke_command. (6 locations)\n")])])]),a("p",[e._v("Last, initiate the boot. You can execute "),a("code",[e._v("hello_world-rs")]),e._v(" in the normal world\nconsole, and will see that the breakpoint we set was hit.")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('(gdb) c\nContinuing.\n[Switching to Thread 1.2]\n\nThread 2 hit Breakpoint 2, ta::invoke_command (cmd_id=0, params=0x4010ff00) at src/main.rs:50\n50\t    trace_println!("[+] TA invoke command");\n')])])])])}),[],!1,null,null,null);t.default=o.exports}}]);